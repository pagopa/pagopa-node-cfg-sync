info:
  application:
    description: '@project.description@'
    artifactId: '@project.artifactId@'
    version: '@project.version@'
    name: '@project.name@'
  properties:
    environment: ${ENV:test}
cors:
  configuration: '{"origins": ["*"], "methods": ["*"]}'
server:
  port: '8080'
  servlet:
    context-path: /
management:
  endpoints:
    web:
      exposure:
        include: health,info
    jmx:
      exposure:
        include: health,info
  info:
    env:
      enabled: 'true'
  health:
    readinessState:
      enabled: 'true'
    livenessState:
      enabled: 'true'
  endpoint:
    health:
      probes:
        enabled: 'true'
app:
  identifiers:
    pagopa-postgres: 'PAGOPAPOSTGRES'
    nexi-postgres: 'NEXIPOSTGRES'
    nexi-oracle: 'NEXIORACLE'

spring:
  datasource:
    driver-class-name: org.h2.Driver
    pagopa:
      postgres:
        url: jdbc:h2:mem:pagopa;DB_CLOSE_ON_EXIT=FALSE
        username: sa
        password:
        #permette di abilitare/disabilitare il datasource al db Postgres PagoPA
        enabled: 'true'
    nexi:
      oracle:
        url: jdbc:h2:mem:nexi_oracle;DB_CLOSE_ON_EXIT=FALSE
        username: sa
        password:
        #permette di abilitare/disabilitare il datasource al db Oracle Nexi
        enabled: 'true'
      postgres:
        url: jdbc:h2:mem:nexi_postgres;DB_CLOSE_ON_EXIT=FALSE
        username: sa
        password:
        #permette di abilitare/disabilitare il datasource al db Postgres Nexi
        enabled: 'true'
  jpa:
    database: default
    generate-ddl: true
#    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: 'create-drop'
#    defer-datasource-initialization: true
#    show-sql: true
#    properties:
#      hibernate:
#        dialect: H2Dialect
#        format_sql: true
  h2:
    console:
      enabled: 'true'
  sql:
    init:
      mode: always

stand-in-manager:
  rx-connection-string: ${STAND_IN_MANAGER_RX_CONNECTION_STRING}
  rx-name: nodo-dei-pagamenti-stand-in
  service:
    subscriptionKey: ''
    enabled: 'true'
    host: http://localhost:1080
  sa-connection-string: ${STAND_IN_MANAGER_SA_CONNECTION_STRING}
  sa-name: standinevents
  consumer-group: $Default
  consumer:
    #permette di abilitare/disabilitare il consumer
    enabled: 'false'
  write:
    #permettono di abilitare/disabilitare la scrittura di stand-in sui vari database
    pagopa-postgres: 'true'
    nexi-postgres: 'true'
    nexi-oracle: 'true'

api-config-cache:
  rx-connection-string: ${API_CONFIG_CACHE_RX_CONNECTION_STRING}
  rx-name: nodo-dei-pagamenti-cache
  service:
    host: http://localhost:1080
    subscriptionKey: ''
    #permette di abilitare/disabilitare la chiamata al servizio tramite API
    enabled: 'true'
    retryLeft: 2
    attemptDelay: 1
  sa-connection-string: ${API_CONFIG_CACHE_SA_CONNECTION_STRING}
  sa-name: cacheevents
  consumer-group: $Default
  consumer:
    #permette di abilitare/disabilitare il consumer
    enabled: 'false'
  write:
    #permettono di abilitare/disabilitare la scrittura di cache sui vari database
    pagopa-postgres: 'true'
    nexi-postgres: 'true'
    nexi-oracle: 'true'
riversamento:
  enabled: true
  source: pagopa-postgres
  target: pagopa-postgres

timezone: ${TIMEZONE:Europe/Rome}

logging:
  level:
    it:
      gov:
        pagopa: DEBUG
    root: INFO